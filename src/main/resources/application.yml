spring:
  config:
    import: optional:file:.env.development[.properties]
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: ${DB_DRIVER}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect

api:
  security:
    token:
      secret: sptech

gemini:
  api:
    key: ${GEMINI_API_KEY}
    url: ${GEMINI_API_URL}
brevo:
  key: ${BREVO_API_KEY}
  url: ${BREVO_API_URL}
server:
  servlet:
    context-path: /api

# Configuração de observability (actuator)
management:
  endpoints:
    enabled-by-default: false # Desativa todos os endpoints rodando por default do actuator
    web:
      exposure:
        include: 'health,prometheus' # Define quais endepoints do actuator serão expostos
  endpoint:
    health:
      enabled: true # Ativa o endpoint
      show-details: always # Informas mais detalhes desse endpoint
    prometheus:
      enabled: true

otel:
  traces:
    exporter:
      otlp:
        endpoint: http://localhost:55681/v1/traces # HTTP se preferir
  metrics:
    exporter:
      otlp:
        endpoint: http://localhost:55681/v1/metrics # HTTP se preferir
  logs:
    exporter:
      otlp:
        endpoint: http://otel-collector:55681/v1/logs # HTTP
  resource:
    attributes:
      service.name: java-app-hard